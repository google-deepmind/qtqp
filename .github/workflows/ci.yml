name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]   # e.g. v0.1.0 â†’ triggers release
  pull_request:
  workflow_dispatch:

jobs:
  # ------------------------------
  # 1. Run tests on all platforms
  # ------------------------------
  test:
    name: Test (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install package + test dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -e .[test] || python -m pip install -e .
          python -m pip install -U pytest

      - name: Run tests
        run: pytest -q


  # ------------------------------
  # 2. Build & publish on tag push
  # ------------------------------
  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test]  # ensures tests passed first
    name: Build & Publish to PyPI
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # required for Trusted Publishing (OIDC)
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Build sdist and wheel
        run: |
          python -m pip install -U pip build
          python -m build  # creates dist/*.tar.gz and dist/*.whl

      - name: Upload build artifacts (for record)
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          # Uncomment this line to do a dry run on TestPyPI first:
          # repository-url: https://test.pypi.org/legacy/
          # skip-existing: true   # optional if you rerun tags

