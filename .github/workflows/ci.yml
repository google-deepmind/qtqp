name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]   # e.g. v0.1.0 triggers a release
  pull_request:
  workflow_dispatch:

jobs:
  # --------------------------------
  # 1. Test across OS and Python
  # --------------------------------
  test:
    name: Test (${{ matrix.os }} / py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v5

      # Install Python and cache pip
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      # Use conda for scikit-sparse (simpler than trying to build SuiteSparse)
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: test-env
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          channels: conda-forge
          channel-priority: strict

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -y -c conda-forge scikit-sparse
          pip install -U pip
          pip install qdldl pytest
          pip install -e .[test] || pip install -e .

      - name: Run tests
        shell: bash -l {0}
        run: pytest -q


  # --------------------------------
  # 2. Build & publish on tag push
  # --------------------------------
  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test]  # only run if tests passed everywhere
    name: Build & Publish to PyPI
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # required for PyPI Trusted Publishing
      contents: read

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.11"
          cache: pip

      - name: Build sdist and wheel
        run: |
          python -m pip install -U pip build
          python -m build  # outputs dist/*.tar.gz and dist/*.whl

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

      - name: Publish to PyPI (Trusted Publishing)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          # Uncomment the next line to test uploads safely first:
          # repository-url: https://test.pypi.org/legacy/
          # skip-existing: true   # optional if re-running tags

